<?php $this->extend('ButterCream./layout/index'); ?>
<?php $this->assign('page_heading', '{{ pluralHumanName }}'); ?>
<?php $this->assign('ajax_update_element', '#{{ pluralHumanName|lower|slug }}-pagination'); ?>
<?php $this->Paginator->ajaxTemplateOptions($this->fetch('ajax_update_element')); ?>

<?php $this->start('index.card_buttons'); ?>
<div class="btn-group btn-group-xs" role="group" aria-label="User Navigation">
    <?= $this->Html->addBtn() ?>
{% set done = [] %}
{% set links = [] %}
{% for type, data in associations %}
{% for alias, details in data %}
{% if details.navLink and details.controller is not same as(_view.name) and details.controller not in done %}
{% set links = links|merge([{'name': alias|underscore|humanize, 'controller': details.controller}]) %}
{% set done = done|merge([details.controller]) %}
{% endif %}
{% endfor %}
{% endfor %}
{% if links %}
    <?= $this->Html->actionDropdownMenu([
        $this->Html->link('New {{ singularHumanName }}', ['action' => 'add'], ['class' => 'dropdown-item']),
{% for link in links %}
        $this->Html->link('List {{ link.name }}', ['controller' => '{{ link.controller }}', 'action' => 'index'], ['class' => 'dropdown-item']),
        $this->Html->link('New {{ link.name }}', ['controller' => '{{ link.controller }}', 'action' => 'add'], ['class' => 'dropdown-item']),
{% endfor %}
    ]) ?>
{% endif %}
</div>
<?php $this->end(); ?>

{% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}
<table class="table table-striped table-stacked">
    <thead>
        <tr>
{% for field in fields %}
            <?= $this->Table->header('{{ field }}') ?>
{% endfor %}
            <th class="actions">Actions</th>
        </tr>
    </thead>
    <tbody>
        <?php foreach (${{ pluralVar }} as ${{ singularVar }}) : ?>
        <tr>
{% for field in fields %}
{% set isKey = false %}
{% if associations.BelongsTo %}
    {%- for alias, details in associations.BelongsTo %}
        {%- if field == details.foreignKey %}
            {%- set isKey = true %}
            {%- if field matches '/_id$/' %}
                {%- set dataTitle = field|slice(0, -3)|humanize %}
            {%- else %}
                {%- set dataTitle = field|humanize %}
            {%- endif %}
            <td data-title="{{ dataTitle }}: ">
                <?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}], ['default' => true]) : '' ?>
            </td>
        {{- "\n" }}
        {%- endif %}
    {%- endfor %}
{% endif %}
{% if isKey is not same as(true) %}
{% set columnData = Bake.columnData(field, schema) %}
{% if columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger'] %}
            <td data-title="{{ field|humanize }}: "><?= h(${{ singularVar }}->{{ field }}) ?></td>
{% else %}
            <td data-title="{{ field|humanize }}: "><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
{% endif %}
{% endif %}
{% endfor %}
{% set pk = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
            <td class="actions">
                <?= $this->Html->viewBtn({{ pk|raw }}) ?>
                <?= $this->Html->editBtn({{ pk|raw }}) ?>
                <?= $this->Form->deleteBtn({{ pk|raw }}) ?>
            </td>
        </tr>
        <?php endforeach; ?>
    </tbody>
</table>
